{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","inputValues","setinputValues","preValue","setPreValue","op","setOp","initial","setInitial","operatorType","setOperatorType","perc","setperc","eq","setEq","setInput","e","length","includes","target","value","equal","a","plusValue","String","parseFloat","minusValue","divValue","multiValue","operatorClick","useEffect","className","type","Container","Row","Col","xs","onClick","perValue","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fabd5c9.chunk.js","sourcesContent":["import './App.css';\nimport { useEffect,useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container,Row,Col,Button} from 'react-bootstrap';\nfunction App() {\n  const [inputValues,setinputValues]=useState(\"0\");\n  const [preValue,setPreValue]=useState(\"\");\n  const [curValue,setCurValue]=useState(\"\");\n  const [op,setOp]=useState(\"\");\n  const [initial,setInitial]=useState(\" \");\n  const [operatorType,setOperatorType]=useState(\"\");\n  const [perc,setperc]=useState(\"\");\n  const [eq,setEq]=useState(\"\");\n  const setInput=(e)=>{\n    if(inputValues.length>=10)return\n{\n    if(inputValues.includes(\".\") && e.target.value===\".\") return;\n    if(initial===\" \")\n    {\n      setinputValues(\"\");\n      setInitial(\"1\");\n      setinputValues(e.target.value);\n    }\n    else\n    {\n setinputValues(inputValues+e.target.value);\n    }\n    if(perc!==\"\")\n    {\n      setinputValues(\"\");\n      setinputValues(e.target.value);\n      setperc(\"\");\n    }\n    if(eq!=\"\")\n    {\n      setinputValues(\"\");\n      setinputValues(e.target.value);\n      setEq(\"\");\n    }\n    if(op!==\"\")\n    {\n      setinputValues(e.target.value);\n        setOp(\"\");\n       }\n  }\n  }\n  const percentage=(e)=>{\n    setperc(\"1\");\n    const perValue=String(parseFloat(inputValues)/100);\n          setinputValues(perValue);\n  }\n  const equal=async(e)=>{\n    setEq(\"1\");\n    switch (operatorType) {\n      case \"+\":\n        const plusValue=String(parseFloat(preValue)+parseFloat(inputValues));\n        setinputValues(plusValue);\n        break;\n        case \"-\":\n        const minusValue=String(parseFloat(preValue)-parseFloat(inputValues));\n        setinputValues(minusValue);\n        break;\n        case \"/\":\n        const divValue=String(parseFloat(preValue)/parseFloat(inputValues));\n        setinputValues(divValue);\n        break;\n        case \"X\":\n        const multiValue=String(parseFloat(preValue)*parseFloat(inputValues));\n        setinputValues(multiValue);\n        break;\n      default:\n        break;\n    }\n  }\n  const operatorClick=(e)=>{\n    setPreValue(inputValues);\n    setOp(e.target.value);\n    setOperatorType(e.target.value);\n  }\n  const clear=(e)=>{\n    setInitial(\" \");\n    setinputValues(\"0\");\n    setPreValue(\"\");\n  }\n\n  const plusMinus=(e)=>{\n    if(inputValues.includes(\"-\"))return;\n    setinputValues(\"-\"+inputValues);\n  }\n  useEffect(()=>{\n\n  },[]);\n  return (\n   \n    <div className=\"App\">\n    <input type=\"text\" className=\"inputValue\" value={inputValues}></input>\n    <Container>\n    <Row>\n      <Col xs={3}><input type=\"button\" className=\"Row\" value=\"AC\" onClick={clear}></input></Col>\n      <Col xs={3}><input type=\"button\" className=\"Row\" value=\"+/-\" onClick={plusMinus}></input></Col>\n      <Col xs={3}><input type=\"button\" className=\"Row\" value=\"%\" onClick={percentage}></input></Col>\n      <Col xs={3}><input type=\"button\" className=\"operators\" value=\"/\" onClick={operatorClick}></input></Col>\n    </Row>\n    <Row>\n      <Col xs={3}><input type=\"button\" className=\"Row\" value=\"7\" onClick={setInput}></input></Col>\n      <Col xs={3}><input type=\"button\" className=\"Row\" value=\"8\" onClick={setInput}></input></Col>\n      <Col xs={3}><input type=\"button\" className=\"Row\" value=\"9\" onClick={setInput}></input></Col>\n      <Col xs={3}><input type=\"button\" className=\"operators\" value=\"X\" onClick={operatorClick}></input></Col>\n    </Row>\n    <Row>\n      <Col xs={3}><input type=\"button\" className=\"Row\" value=\"4\" onClick={setInput}></input></Col>\n      <Col xs={3}><input type=\"button\" className=\"Row\" value=\"5\" onClick={setInput}></input></Col>\n      <Col xs={3}><input type=\"button\" className=\"Row\" value=\"6\" onClick={setInput}></input></Col>\n      <Col xs={3}><input type=\"button\" className=\"operators\" value=\"-\" onClick={operatorClick}></input></Col>\n    </Row>\n    <Row>\n      <Col xs={3}><input type=\"button\" className=\"Row\" value=\"1\" onClick={setInput}></input></Col>\n      <Col xs={3}><input type=\"button\" className=\"Row\" value=\"2\" onClick={setInput}></input></Col>\n      <Col xs={3}><input type=\"button\" className=\"Row\" value=\"3\" onClick={setInput}></input></Col>\n      <Col xs={3}><input type=\"button\" className=\"operators\" value=\"+\" onClick={operatorClick}></input></Col>\n    </Row>\n    <Row>\n      <Col xs={6}><input type=\"button\" className=\"zero\" value=\"0\" onClick={setInput}></input></Col>\n      <Col xs={3}><input type=\"button\" className=\"Row\" value=\".\" onClick={setInput}></input></Col>\n      <Col xs={3}><input type=\"button\" className=\"operators\" value=\"=\" onClick={equal}></input></Col>\n    </Row>\n  </Container>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}